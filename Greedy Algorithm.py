# 탐욕법
# Greedy Algorithm

# 매 순간 최선의 경우만을 선택한다.
# 다른 경우는 고려하지 않음. 나중 또한 고려하지 않음

# 모든 경우를 다 보지 않으므로 완전탐색보다 빠르다


# 10, 50, 100, 500 동전이 무한하다고 가정
# 800원을 거슬러줄 때 동전을 최소한의 갯수로 주는 방법은?

# 가장 큰 단위부터 최대한 주고, 그 다음 단위 최대한 주고...

# 100, 400, 500 동전이 무한
# 800원을 거슬러주는 상황에 그리디로는 400 x 2개를 주는 방법을 사용할 수 없음



# boj 11047

# 동전의 총 종류는 N, 동전을 합쳐서 만들려고 하는 값 K
# 필요한 동전 개수의 최솟값을 구하라

# 첫째 줄에 N과 K가 주어짐(1 <= N <= 10, 1 <= K <= 100000000)
# 둘째 줄부터 N개의 줄에 동전의 가치가 오름차순으로 주어진다.

N, K = input().split()
N = int(N)
K = int(K)

coins = [int(input()) for _ in range(N)]
coins.reverse()

freq = 0

for coin in coins:
    freq += K // coin
    K %= coin

print(freq)


# 몫이랑 나머지 문제 더 풀어보기
